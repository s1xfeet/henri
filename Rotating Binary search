def count_rotations_binary(nums):
    lo = 0
    hi = len(nums) #10
    
    # A list that wasn't rotated at all.
    #test2 = {
    #'input': {
        #'nums': [3, 5, 6, 7, 9, 11, 14, 19, 25, 29]
    #},
    #'output': 0
#}
    
    while True:
        mid = (lo + hi) // 2
        mid_number = nums[mid]
        
        # Uncomment the next line for logging the values and fixing errors.
        print("lo:", lo, ", hi:", hi, ", mid:", mid, ", mid_number:", mid_number)
        
        if mid > 0 and (mid_number < nums[mid-1]):
            # The middle position is the answer
            return mid
        
        elif mid > 0 and (nums[mid]< nums[len(nums)-1]):
            # Answer lies in the left half
            hi = mid - 1
            
        elif hi == 1 and (nums[1] < nums[mid]):
            return 1
            
        elif mid_number == nums[0]:
            return 0
        
        else:
            # Answer lies in the right half
            lo = mid + 1
            
        continue
    return 0
